{"version":3,"sources":["public/images/paint8.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","endpoint","endpoint2","endpoint3","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","change","e","setState","defineProperty","target","name","value","componentDidMount","isLoggedIn","axios","get","concat","config","backendUrl","withCredentials","then","result","username","data","catch","error","handleselectedFile","event","selectedFile","files","loaded","handleUpload","FormData","append","state","post","onUploadProgress","ProgressEvent","total","loading","res","joy","sorrow","faceAnnotations","joyLikelihood","anger","angerLikelihood","sorrowLikelihood","min_valence","max_valence","min_danceability","max_danceability","console","log","min_tempo","max_tempo","preview","hasTracks","handleLogout","react_default","a","createElement","Fragment","className","bundle_default","src","controls","Math","round","renderLoading","type","onChange","onClick","renderMood","renderAudio","require","alt","href","Component","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.65e84937.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/paint8.cfb88892.png\";","// /client/App.js\r\n// import \"./public/css/style.css\";\r\nimport config from \"./config.json\";\r\nimport React, { Component } from \"react\";\r\n// import { Link, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport ReactAudioPlayer from \"react-audio-player\";\r\n// import Home from \"./components/homepage\";\r\n// import Navbar from \"./components/navBar\";\r\n// import NotFound from \"./components/notFound\";\r\n// import FileUploader from \"./components/fileUpload\";\r\n// import audio from \"https://p.scdn.co/mp3-preview/6247205863448da37f377a649a330458f3ec7487?cid=4184cfefa27d4bfaa7b5affd6d1e0b91\";\r\nimport axios from \"axios\";\r\n\r\nconst endpoint = \"/upload\";\r\nconst endpoint2 = \"/logout\";\r\nconst endpoint3 = \"/playmood\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedFile: null,\r\n      loaded: 0,\r\n      loading: false,\r\n      isLoggedIn: false,\r\n      username: \"\",\r\n      hasTracks: false,\r\n      joy: false,\r\n      sorrow: false,\r\n      anger: false,\r\n      preview: \"\"\r\n    };\r\n  }\r\n\r\n  change = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.isLoggedIn();\r\n  };\r\n\r\n  isLoggedIn = () => {\r\n    axios\r\n      .get(`${config.backendUrl}user/auth/isloggedin`, {\r\n        withCredentials: true\r\n      })\r\n      .then(result => {\r\n        this.setState({ isLoggedIn: true, username: result.data.username });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ isLoggedIn: false });\r\n      });\r\n  };\r\n\r\n  handleselectedFile = event => {\r\n    this.setState({\r\n      selectedFile: event.target.files[0],\r\n      loaded: 0\r\n    });\r\n  };\r\n  handleUpload = () => {\r\n    const data = new FormData();\r\n    data.append(\"file\", this.state.selectedFile, this.state.selectedFile.name);\r\n\r\n    axios\r\n      .post(endpoint, data, {\r\n        onUploadProgress: ProgressEvent => {\r\n          this.setState({\r\n            loaded: (ProgressEvent.loaded / ProgressEvent.total) * 100,\r\n            loading: true\r\n          });\r\n        }\r\n      })\r\n      .then(res => {\r\n        this.setState({ joy: false });\r\n        this.setState({ sorrow: false });\r\n\r\n        const joy = res.data[0].faceAnnotations[0].joyLikelihood;\r\n        const anger = res.data[0].faceAnnotations[0].angerLikelihood;\r\n        const sorrow = res.data[0].faceAnnotations[0].sorrowLikelihood;\r\n\r\n        let min_valence = \"0\";\r\n        let max_valence = \"1\";\r\n        let min_danceability = \"0\";\r\n        let max_danceability = \"1\";\r\n\r\n        // The overall loudness of a track in decibels (dB).\r\n        // Loudness values are averaged across the entire track and are useful for comparing relative loudness of tracks.\r\n        // Loudness is the quality of a sound that is the primary psychological correlate of physical strength (amplitude).\r\n        // Values typical range between -60 and 0 db.\r\n        // let min_loudness = \"-60\";\r\n        // let max_loudness = \"0\";\r\n\r\n        let min_tempo = \"0\";\r\n        let max_tempo = \"100\";\r\n\r\n        if (joy === \"VERY_LIKELY\" || joy === \"LIKELY\" || joy === \"POSSIBLE\") {\r\n          this.setState({ joy: true });\r\n          min_valence = \"0.7\";\r\n          min_danceability = \"0.7\";\r\n        }\r\n        if (\r\n          sorrow === \"VERY_LIKELY\" ||\r\n          sorrow === \"LIKELY\" ||\r\n          joy === \"VERY_UNLIKELY\"\r\n        ) {\r\n          this.setState({ sorrow: true });\r\n          min_valence = \"0\";\r\n          max_valence = \"0.4\";\r\n          max_danceability = \"0.5\";\r\n        }\r\n        if (anger === \"VERY_LIKELY\" || anger === \"LIKELY\") {\r\n          this.setState({ anger: true, joy: false });\r\n          max_valence = \"0.5\";\r\n          min_danceability = \"0.8\";\r\n          // min_loudness = \"0.7\";\r\n          // min_tempo = \"0.7\";\r\n        }\r\n        console.log(min_danceability);\r\n        console.log(min_valence);\r\n        debugger;\r\n        axios\r\n          .post(endpoint3, {\r\n            withCredentials: true,\r\n            min_valence: min_valence,\r\n            max_valence: max_valence,\r\n            min_danceability: min_danceability,\r\n            max_danceability: max_danceability,\r\n            // min_loudness: min_loudness,\r\n            // max_loudness: max_loudness,\r\n            min_tempo: min_tempo,\r\n            max_tempo: max_tempo\r\n          })\r\n          .then(result => {\r\n            this.setState({ preview: result.data, hasTracks: true });\r\n            debugger;\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n          });\r\n      })\r\n      .catch(error => {\r\n        debugger;\r\n      });\r\n  };\r\n  handleLogout = () => {\r\n    axios\r\n      .get(endpoint2, { withCredentials: true })\r\n      .then(result => {\r\n        this.setState({ isLoggedIn: null });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  renderMood() {\r\n    if (this.state.joy)\r\n      return (\r\n        <React.Fragment>\r\n          <h1 className=\"monospace\">You look quite happy...</h1>\r\n          <h3 className=\"monospace mb-5\">Let's play something ecstatic.</h3>\r\n        </React.Fragment>\r\n      );\r\n    if (this.state.sorrow)\r\n      return (\r\n        <React.Fragment>\r\n          <h1 className=\"monospace\">Mmm, you seem down...</h1>\r\n          <h3 className=\"monospace mb-5\">I think this song fits your mood.</h3>\r\n        </React.Fragment>\r\n      );\r\n    if (this.state.anger)\r\n      return (\r\n        <React.Fragment>\r\n          <h1 className=\"monospace\">Angry?!?!?!</h1>\r\n          <h3 className=\"monospace mb-5\">Listen to this!!</h3>\r\n        </React.Fragment>\r\n      );\r\n  }\r\n\r\n  renderLoading() {\r\n    if (this.state.loading)\r\n      return (\r\n        <React.Fragment>\r\n          <h3 className=\"monospace\">Analyzing...</h3>\r\n        </React.Fragment>\r\n      );\r\n  }\r\n\r\n  renderAudio() {\r\n    if (this.state.hasTracks)\r\n      return (\r\n        <React.Fragment>\r\n          <ReactAudioPlayer src={this.state.preview} controls />\r\n        </React.Fragment>\r\n      );\r\n    if (!this.state.hasTracks)\r\n      return (\r\n        <React.Fragment>\r\n          <h1 className=\"monospace\">Upload a selfie...</h1>\r\n          <div className=\"monospace fs30\">\r\n            {Math.round(this.state.loaded, 2)} %\r\n            <div>{this.renderLoading()}</div>\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <div className=\"file-input-wrapper\">\r\n              <button className=\"btn-file-input green\">Choose image</button>\r\n              <input\r\n                type=\"file\"\r\n                name=\"blabla\"\r\n                onChange={this.handleselectedFile}\r\n              />\r\n            </div>\r\n            <span className=\"input-group-btn\">\r\n              <button\r\n                className=\"btn btn-default ml-3 white_bg\"\r\n                type=\"button\"\r\n                onClick={this.handleUpload}\r\n              >\r\n                Upload\r\n              </button>\r\n            </span>\r\n            <h2 className=\"mb-5 monospace mt-2\">\r\n              ...and moodplay will play you mood.\r\n            </h2>\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n  }\r\n\r\n  render() {\r\n    if (this.state.isLoggedIn) {\r\n      return (\r\n        <header className=\"masthead\">\r\n          <div className=\"container h-100\">\r\n            <div className=\"row h-100\">\r\n              <div className=\"col-lg-6 my-auto\">\r\n                <div className=\"header-content mx-auto\">\r\n                  <div className=\"App\">\r\n                    <button\r\n                      onClick={this.handleLogout}\r\n                      className=\"btn btn-outline btn-sm js-scroll-trigger green\"\r\n                    >\r\n                      Logout\r\n                    </button>\r\n                    <h3 className=\"mb-5 mt-3 monospace\">\r\n                      Hi {this.state.username},\r\n                    </h3>\r\n                    {this.renderMood()}\r\n                    {this.renderAudio()}\r\n                  </div>\r\n                  <br />\r\n                  {/* <FileUploader /> NICER UPLOADER TEST */}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-lg-6 my-auto\">\r\n                <div className=\"device\">\r\n                  <div className=\"screen\">\r\n                    <img\r\n                      src={require(\"./public/images/paint8.png\")}\r\n                      className=\"img-fluid\"\r\n                      alt=\"\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"button\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n      );\r\n    } else {\r\n      return (\r\n        <header className=\"masthead\">\r\n          <div className=\"container h-100\">\r\n            <div className=\"row h-100\">\r\n              <div className=\"col-lg-6 my-auto\">\r\n                <div className=\"header-content mx-auto\">\r\n                  <h1 className=\"mb-5 monospace\">\r\n                    MoodPlay plays music based on your mood...{\" \"}\r\n                  </h1>\r\n                  <a\r\n                    href={`${config.backendUrl}user/auth/spotify`}\r\n                    className=\"btn btn-outline btn-xl js-scroll-trigger\"\r\n                  >\r\n                    Login with Spotify\r\n                  </a>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-6 my-auto\">\r\n                <div className=\"device-mockup iphone6_plus portrait white\">\r\n                  <div className=\"device\">\r\n                    <div className=\"screen\">\r\n                      <img\r\n                        src={require(\"./public/images/paint8.png\")}\r\n                        className=\"img-fluid\"\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"button\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\n\r\nimport \"./public/css/fonts.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\r\nimport \"./public/css/new-age.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}